[{"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Index.tsx":"1","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\button\\ResourceButton.tsx":"2","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\security\\role\\SecurityRole.tsx":"3","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppHeader.tsx":"4","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\system\\property\\SystemProperty.tsx":"5","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts":"6","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\LoadingAndDialog.tsx":"7","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAccessToken.ts":"8","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncGetAction.tsx":"9","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Test.tsx":"10","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\security\\cacheRefresh\\SecurityCacheRefresh.tsx":"11","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx":"12","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Main.tsx":"13","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\menu\\ResourceMenu.tsx":"14","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\common\\commonValue.ts":"15","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useTableModel.tsx":"16","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppMenu.tsx":"17","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useCodes.ts":"18","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useLabels.tsx":"19","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\UnAuthorization.tsx":"20","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\message\\ResourceMessage.tsx":"21","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\usePage.ts":"22","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useWindowSize.ts":"23","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\RequestError.tsx":"24","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncAction.tsx":"25","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\tab\\ResourceTab.tsx":"26","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx":"27","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\security\\user\\SecurityUser.tsx":"28","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\common\\mergeValid.ts":"29","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useButtons.tsx":"30","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\label\\ResourceLabel.tsx":"31"},{"size":1602,"mtime":1624276390851,"results":"32","hashOfConfig":"33"},{"size":13507,"mtime":1623321869813,"results":"34","hashOfConfig":"33"},{"size":23181,"mtime":1624358290880,"results":"35","hashOfConfig":"33"},{"size":6369,"mtime":1618828287887,"results":"36","hashOfConfig":"33"},{"size":11281,"mtime":1624274073033,"results":"37","hashOfConfig":"33"},{"size":425,"mtime":1610448755299,"results":"38","hashOfConfig":"33"},{"size":1092,"mtime":1619690762922,"results":"39","hashOfConfig":"33"},{"size":1636,"mtime":1619690825448,"results":"40","hashOfConfig":"33"},{"size":2793,"mtime":1620912130060,"results":"41","hashOfConfig":"33"},{"size":5934,"mtime":1617887078282,"results":"42","hashOfConfig":"33"},{"size":1537,"mtime":1624270793317,"results":"43","hashOfConfig":"33"},{"size":613,"mtime":1613988517324,"results":"44","hashOfConfig":"33"},{"size":3785,"mtime":1624269791113,"results":"45","hashOfConfig":"33"},{"size":20238,"mtime":1622541636461,"results":"46","hashOfConfig":"33"},{"size":73,"mtime":1620297128310,"results":"47","hashOfConfig":"33"},{"size":684,"mtime":1624269791112,"results":"48","hashOfConfig":"33"},{"size":897,"mtime":1618919920595,"results":"49","hashOfConfig":"33"},{"size":489,"mtime":1624271748775,"results":"50","hashOfConfig":"33"},{"size":510,"mtime":1622205618748,"results":"51","hashOfConfig":"33"},{"size":551,"mtime":1618830557712,"results":"52","hashOfConfig":"33"},{"size":9929,"mtime":1624269791113,"results":"53","hashOfConfig":"33"},{"size":1838,"mtime":1620297128312,"results":"54","hashOfConfig":"33"},{"size":1078,"mtime":1614072784953,"results":"55","hashOfConfig":"33"},{"size":395,"mtime":1618830594506,"results":"56","hashOfConfig":"33"},{"size":4242,"mtime":1621862291381,"results":"57","hashOfConfig":"33"},{"size":12553,"mtime":1623321893472,"results":"58","hashOfConfig":"33"},{"size":409,"mtime":1618828287886,"results":"59","hashOfConfig":"33"},{"size":12265,"mtime":1624358372540,"results":"60","hashOfConfig":"33"},{"size":350,"mtime":1621864074548,"results":"61","hashOfConfig":"33"},{"size":914,"mtime":1619094192525,"results":"62","hashOfConfig":"33"},{"size":11103,"mtime":1623321884567,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sxr7gy",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Index.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\button\\ResourceButton.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\security\\role\\SecurityRole.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppHeader.tsx",[],["132","133"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\system\\property\\SystemProperty.tsx",["134","135"],"import {\r\n  CloseButton,\r\n  DeleteDialog,\r\n  Form,\r\n  InFormContainer,\r\n  LabelInput,\r\n  LabelSelect,\r\n  Loading,\r\n  Modal,\r\n  PageHeader,\r\n  Row,\r\n  SaveButton,\r\n  SearchButton,\r\n  Table,\r\n  TableModelProps,\r\n  useChange,\r\n} from 'doif-react-kit';\r\nimport { FormEvent, useCallback, useMemo, useState } from 'react';\r\nimport { defaultValue } from '../../../common/commonValue';\r\nimport mergeValid from '../../../common/mergeValid';\r\nimport useAsyncAction, {\r\n  deleteAction,\r\n  postAction,\r\n  putAction,\r\n} from '../../../hooks/useAsyncAction';\r\nimport useAsyncGetAction, { getAction } from '../../../hooks/useAsyncGetAction';\r\nimport useButtons, { ButtonInfoProps } from '../../../hooks/useButtons';\r\nimport useCodes from '../../../hooks/useCodes';\r\nimport useLabels from '../../../hooks/useLabels';\r\nimport usePage from '../../../hooks/usePage';\r\nimport useTableModel from '../../../hooks/useTableModel';\r\n\r\n// table row data\r\nlet row: any = {};\r\n// button 클릭시 등록/수정 타입\r\nlet buttonType: string = '';\r\n\r\n/**\r\n * 시스템 속성 관리 페이지\r\n * @returns SystemProperty\r\n */\r\n\r\nfunction SystemProperty() {\r\n  /******************************************************************\r\n   * 기본 데이터 및 state\r\n   *******************************************************************/\r\n  // 페이지 데이터 조회\r\n  const [pageData] = usePage('/api/pages/system/property');\r\n\r\n  // 초기 페이지 상태\r\n  const initPageState = {\r\n    openModal: false,\r\n    disableModifyButton: true,\r\n    disableDeleteButton: true,\r\n    openDeleteDialog: false,\r\n    disableItem: false,\r\n  };\r\n\r\n  // 페이지 상태\r\n  const [pageState, setPageState] = useState(initPageState);\r\n\r\n  // form 데이터\r\n  const [form, onChangeForm, replaceForm, resetForm] = useChange({\r\n    propertyGroup: '',\r\n    property: '',\r\n    value: '',\r\n    description: '',\r\n    updatable: 'true',\r\n  });\r\n\r\n  // 검색 조건 데이터\r\n  const [searchForm, onChangeSearchForm, replaceSearchForm, resetSearchForm] =\r\n    useChange({\r\n      searchPropertyGroup: '',\r\n    });\r\n\r\n  const { propertyGroup, property, value, description, updatable } = form;\r\n  const { searchPropertyGroup } = searchForm;\r\n\r\n  // 라벨들\r\n  const {\r\n    LABEL_SYSTEM_PROPERTY_GROUP,\r\n    LABEL_SYSTEM_PROPERTY_PROPERTY,\r\n    LABEL_SYSTEM_PROPERTY_VALUE,\r\n    LABEL_SYSTEM_PROPERTY_DESCRIPTION,\r\n    LABEL_SYSTEM_PROPERTY_UPDATEABLE,\r\n    LABEL_SYSTEM_PROPERTY_LIST,\r\n    LABEL_SYSTEM_PROPERTY_CAPTION,\r\n  } = useLabels(pageData);\r\n\r\n  // 코드\r\n  const [propertyGroupType]: any = useCodes('PROPERTY_GROUP_TYPE', pageData);\r\n  const updatableCodes = useMemo(\r\n    () => [\r\n      {\r\n        code: 'true',\r\n        name: '변경 가능',\r\n      },\r\n      {\r\n        code: 'false',\r\n        name: '변경 불가능',\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n  // 테이블 model\r\n  const model: TableModelProps[] = useTableModel(\r\n    [\r\n      {\r\n        label: 'LABEL_SYSTEM_PROPERTY_GROUP_NAME',\r\n        name: 'propertyGroupName',\r\n        width: 200,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: 'LABEL_SYSTEM_PROPERTY_GROUP',\r\n        name: 'propertyGroup',\r\n        width: 200,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: 'LABEL_SYSTEM_PROPERTY_PROPERTY',\r\n        name: 'property',\r\n        width: 300,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: 'LABEL_SYSTEM_PROPERTY_VALUE',\r\n        name: 'value',\r\n        width: 350,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: 'LABEL_SYSTEM_PROPERTY_DESCRIPTION',\r\n        name: 'description',\r\n        width: 450,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: 'LABEL_SYSTEM_PROPERTY_UPDATEABLE',\r\n        name: 'updatableName',\r\n        width: 120,\r\n      },\r\n      {\r\n        label: '',\r\n        name: 'systemPropertyId',\r\n        hidden: true,\r\n      },\r\n      {\r\n        label: '',\r\n        name: 'updatable',\r\n        hidden: true,\r\n      },\r\n    ],\r\n    pageData,\r\n  );\r\n\r\n  /******************************************************************\r\n   * Action 함수들\r\n   ******************************************************************/\r\n\r\n  // 메세지 등록/수정/삭제 시 성공 콜백\r\n  const asyncSucCallback = () => {\r\n    setPageState((state) => ({\r\n      ...state,\r\n      openModal: false,\r\n      openDeleteDialog: false,\r\n    }));\r\n    getSystemProperties();\r\n  };\r\n\r\n  // 시스템 속성 데이터 조회\r\n  const [systemProperties, getSystemProperties]: any = useAsyncGetAction(\r\n    () =>\r\n      pageData &&\r\n      getAction('/api/system-properties', {\r\n        propertyGroup: searchPropertyGroup,\r\n      }),\r\n    [pageData],\r\n    {\r\n      skip: false,\r\n      onSuccess: () => {\r\n        setPageState(initPageState);\r\n      },\r\n    },\r\n  );\r\n\r\n  // 시스템 속성 등록\r\n  const [postSystemProperty, postSystemPropertyValid] = useAsyncAction(\r\n    () => postAction('/api/system-properties', form),\r\n    {\r\n      onSuccess: asyncSucCallback,\r\n    },\r\n  );\r\n\r\n  // 시스템 속성 수정\r\n  const [putSystemProperty, putSystemPropertyValid] = useAsyncAction(\r\n    () => putAction('/api/system-properties/' + row.systemPropertyId, form),\r\n    {\r\n      onSuccess: asyncSucCallback,\r\n    },\r\n  );\r\n\r\n  // 시스템 속성 삭제\r\n  const [deleteSystemProperty] = useAsyncAction(\r\n    () => deleteAction('/api/system-properties/' + row.systemPropertyId),\r\n    {\r\n      onSuccess: asyncSucCallback,\r\n      onError: () => {\r\n        setPageState((state) => ({\r\n          ...state,\r\n          openDeleteDialog: false,\r\n        }));\r\n      },\r\n    },\r\n  );\r\n\r\n  /******************************************************************\r\n   * 클라이언트 함수들\r\n   ******************************************************************/\r\n  // 테이블 버튼들\r\n  const buttonInfos: ButtonInfoProps[] = [\r\n    {\r\n      id: 'BTN_SYSTEM_PROPERTY_ADD',\r\n      onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setPageState((state) => ({\r\n          ...state,\r\n          disableItem: false,\r\n          openModal: true,\r\n        }));\r\n        buttonType = 'post';\r\n\r\n        resetForm();\r\n      },\r\n    },\r\n    {\r\n      id: 'BTN_SYSTEM_PROPERTY_MODIFY',\r\n      disable: pageState.disableModifyButton,\r\n      onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setPageState((state) => ({\r\n          ...state,\r\n          disableItem: true,\r\n          openModal: true,\r\n        }));\r\n        buttonType = 'put';\r\n\r\n        replaceForm({\r\n          propertyGroup: row.propertyGroup,\r\n          property: row.property,\r\n          value: row.value,\r\n          description: row.description,\r\n          updatable: row.updatable ? 'true' : 'false',\r\n        });\r\n      },\r\n    },\r\n    {\r\n      id: 'BTN_SYSTEM_PROPERTY_DELETE',\r\n      disable: pageState.disableDeleteButton,\r\n      onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setPageState((state) => ({ ...state, openDeleteDialog: true }));\r\n      },\r\n    },\r\n  ];\r\n  const buttons = useButtons(pageData && pageData.buttonMap, buttonInfos);\r\n\r\n  // 시스템 속성 조회\r\n  const onSearchSystemProperty = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    getSystemProperties();\r\n  };\r\n\r\n  // 테이블 select 시 콜백\r\n  const onSelectRow = useCallback((id: string, rowValue: any) => {\r\n    row = rowValue;\r\n    setPageState((state) => ({\r\n      ...state,\r\n      disableModifyButton: !row.updatable,\r\n      disableDeleteButton: false,\r\n    }));\r\n  }, []);\r\n\r\n  // 시스템 속성 저장\r\n  const onSaveSystemProperty = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (buttonType === 'post') {\r\n      postSystemProperty();\r\n    } else if (buttonType === 'put') {\r\n      putSystemProperty();\r\n    }\r\n  };\r\n\r\n  // Validation\r\n  const systemPropertyValid = mergeValid([\r\n    postSystemPropertyValid,\r\n    putSystemPropertyValid,\r\n  ]);\r\n\r\n  // 페이지 데이터 로딩 전엔 Loading 표시\r\n  if (!pageData) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DeleteDialog\r\n        visible={pageState.openDeleteDialog}\r\n        onConfirm={deleteSystemProperty}\r\n        onCancel={() =>\r\n          setPageState((state) => ({ ...state, openDeleteDialog: false }))\r\n        }\r\n      />\r\n\r\n      <PageHeader menuName={pageData.menuName} menuList={pageData.menuList} />\r\n\r\n      <Form onSubmit={onSearchSystemProperty}>\r\n        <Row>\r\n          <LabelSelect\r\n            label={LABEL_SYSTEM_PROPERTY_GROUP}\r\n            width=\"300px\"\r\n            defaultValue={defaultValue}\r\n            data={propertyGroupType}\r\n            value={searchPropertyGroup}\r\n            onChange={onChangeSearchForm}\r\n            name=\"searchPropertyGroup\"\r\n          />\r\n        </Row>\r\n        <InFormContainer align=\"right\">\r\n          <SearchButton />\r\n        </InFormContainer>\r\n      </Form>\r\n\r\n      <Table\r\n        caption={LABEL_SYSTEM_PROPERTY_LIST}\r\n        model={model}\r\n        buttons={buttons}\r\n        data={systemProperties ? systemProperties.content : []}\r\n        onSelectRow={onSelectRow}\r\n      />\r\n\r\n      <Modal\r\n        visible={pageState.openModal}\r\n        title={LABEL_SYSTEM_PROPERTY_CAPTION}\r\n      >\r\n        <Form onSubmit={onSaveSystemProperty}>\r\n          <Row>\r\n            <LabelSelect\r\n              required\r\n              label={LABEL_SYSTEM_PROPERTY_GROUP}\r\n              defaultValue={defaultValue}\r\n              data={propertyGroupType}\r\n              value={propertyGroup}\r\n              onChange={onChangeForm}\r\n              name=\"propertyGroup\"\r\n              disabled={pageState.disableItem}\r\n              validation={systemPropertyValid.propertyGroup}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <LabelInput\r\n              required\r\n              label={LABEL_SYSTEM_PROPERTY_PROPERTY}\r\n              value={property}\r\n              onChange={onChangeForm}\r\n              name=\"property\"\r\n              disabled={pageState.disableItem}\r\n              validation={systemPropertyValid.property}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <LabelInput\r\n              required\r\n              label={LABEL_SYSTEM_PROPERTY_VALUE}\r\n              value={value}\r\n              onChange={onChangeForm}\r\n              name=\"value\"\r\n              validation={systemPropertyValid.value}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <LabelInput\r\n              label={LABEL_SYSTEM_PROPERTY_DESCRIPTION}\r\n              value={description}\r\n              onChange={onChangeForm}\r\n              name=\"description\"\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <LabelSelect\r\n              required\r\n              label={LABEL_SYSTEM_PROPERTY_UPDATEABLE}\r\n              data={updatableCodes}\r\n              value={updatable}\r\n              onChange={onChangeForm}\r\n              name=\"updatable\"\r\n              validation={systemPropertyValid.updatable}\r\n            />\r\n          </Row>\r\n          <InFormContainer>\r\n            <SaveButton />\r\n            <CloseButton\r\n              onClick={() =>\r\n                setPageState((state) => ({ ...state, openModal: false }))\r\n              }\r\n            />\r\n          </InFormContainer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SystemProperty;\r\n",["136","137"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts",[],["138","139"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\LoadingAndDialog.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAccessToken.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncGetAction.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Test.tsx",["140","141"],"import {\r\n  Box,\r\n  Button,\r\n  Check,\r\n  Container,\r\n  Datepicker,\r\n  Icon,\r\n  Input,\r\n  MarkdownEditor,\r\n  MarkdownPreview,\r\n  Radio,\r\n  Select,\r\n  Tab,\r\n  Textarea,\r\n} from 'doif-react-kit';\r\nimport marked from 'marked';\r\nimport React, {\r\n  ChangeEvent,\r\n  SyntheticEvent,\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\n\r\ntype TestProps = {};\r\n\r\nfunction Test() {\r\n  const [values, setValues] = useState<Array<string>>([]);\r\n  const [value, setValue] = useState<string>('hi');\r\n  const [selected, setSelected] = useState('TAB_1');\r\n  const [startDate, setStartDate] = useState<Date | null>(new Date());\r\n  const [content, setContent] = useState('');\r\n\r\n  const markdownRef: React.LegacyRef<HTMLDivElement> = useRef(null);\r\n\r\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    const { checked, value: codeValue } = e.target;\r\n\r\n    setValues((value) =>\r\n      checked\r\n        ? value.concat(codeValue)\r\n        : value.filter((val) => val !== codeValue),\r\n    );\r\n  }, []);\r\n\r\n  const onChageRadio = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onChageSelect = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeTab = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSelected(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeMarkdown = useCallback((markdown: string) => {\r\n    setContent(markdown);\r\n  }, []);\r\n\r\n  const onChangeDate = useCallback(\r\n    (\r\n      date: Date | null,\r\n      e: SyntheticEvent<any, Event> | undefined,\r\n      name: string | undefined,\r\n    ) => {\r\n      setStartDate(date);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const data = [\r\n    { code: 'hi', name: '안녕하세요' },\r\n    { code: 'hello', name: '반갑습니다.' },\r\n  ];\r\n\r\n  const tabs = [\r\n    {\r\n      id: 'TAB_1',\r\n      name: '마크다운 에디터',\r\n      disabled: false,\r\n      content: (\r\n        <MarkdownEditor content={content} onChangeMarkdown={onChangeMarkdown} />\r\n      ),\r\n    },\r\n    {\r\n      id: 'TAB_3',\r\n      name: '마크다운 프리뷰',\r\n      disabled: false,\r\n      content: <MarkdownPreview markdown={marked(content)} />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container direction=\"column\" gap=\"0.75rem\">\r\n      <Box height=\"425px\">\r\n        {/* <Loading /> */}\r\n        <Container direction=\"column\">\r\n          <Container style={{ alignItems: 'center' }}>\r\n            <Button>안녕</Button>\r\n            <Button color=\"secondary\">안녕</Button>\r\n            <Button color=\"secondary\" variant=\"outline\">\r\n              안녕\r\n            </Button>\r\n            <Icon icon=\"heart\" />\r\n            <Icon icon=\"heart\" color=\"secondary\" />\r\n            <Icon icon=\"heart\" style={{ fill: '#f00', width: '4rem' }} />\r\n            <Button>\r\n              <Icon icon=\"heart\" />\r\n              버튼\r\n            </Button>\r\n            <Button color=\"secondary\" variant=\"outline\">\r\n              버튼\r\n              <Icon icon=\"heart\" color=\"secondary\" />\r\n            </Button>\r\n            <Button iconOnly>\r\n              <Icon icon=\"heart\" />\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                backgroundColor: '#eaeaea',\r\n                borderRadius: '1.25rem',\r\n                width: '2.5rem',\r\n                height: '2.5rem',\r\n              }}\r\n              iconOnly\r\n            >\r\n              <Icon icon=\"heart\" style={{ fill: '#f00' }} />\r\n            </Button>\r\n            <Input placeholder=\"안녕하세요\" />\r\n            <Input placeholder=\"안녕하세요\" color=\"secondary\" />\r\n            <Input placeholder=\"안녕하세요\" variant=\"underline\" />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              variant=\"underline\"\r\n              color=\"secondary\"\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Input placeholder=\"안녕하세요\" frontIcon={<Icon icon=\"heart\" />} />\r\n            <Input placeholder=\"안녕하세요\" backIcon={<Icon icon=\"heart\" />} />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              frontIcon={<Icon icon=\"check\" />}\r\n              backIcon={<Icon icon=\"calendar\" />}\r\n            />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              variant=\"underline\"\r\n              frontIcon={<Icon icon=\"check\" />}\r\n              backIcon={<Icon icon=\"calendar\" />}\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Check\r\n              data={data}\r\n              values={values}\r\n              name=\"checkbox1\"\r\n              onChange={onChange}\r\n            />\r\n            <Radio\r\n              data={data}\r\n              value={value}\r\n              name=\"radiobox1\"\r\n              onChange={onChageRadio}\r\n            />\r\n            <Select data={data} value={value} onChange={onChageSelect} />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              variant=\"underline\"\r\n            />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              color=\"secondary\"\r\n            />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              color=\"secondary\"\r\n              variant=\"underline\"\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Datepicker selected={startDate} onChange={onChangeDate} />\r\n            <Textarea />\r\n          </Container>\r\n        </Container>\r\n      </Box>\r\n      <Box height=\"425px\">\r\n        <Container>\r\n          <Tab\r\n            tabs={tabs}\r\n            selected={selected}\r\n            name=\"tab-sample\"\r\n            onChange={onChangeTab}\r\n          />\r\n        </Container>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\security\\cacheRefresh\\SecurityCacheRefresh.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Main.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\menu\\ResourceMenu.tsx",[],["142","143"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\common\\commonValue.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useTableModel.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppMenu.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useCodes.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useLabels.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\UnAuthorization.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\message\\ResourceMessage.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\usePage.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useWindowSize.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\RequestError.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncAction.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\tab\\ResourceTab.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\security\\user\\SecurityUser.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\common\\mergeValid.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useButtons.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\label\\ResourceLabel.tsx",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":72,"column":42,"nodeType":"150","messageId":"151","endLine":72,"endColumn":59},{"ruleId":"148","severity":1,"message":"152","line":72,"column":61,"nodeType":"150","messageId":"151","endLine":72,"endColumn":76},{"ruleId":"144","replacedBy":"153"},{"ruleId":"146","replacedBy":"154"},{"ruleId":"144","replacedBy":"155"},{"ruleId":"146","replacedBy":"156"},{"ruleId":"148","severity":1,"message":"157","line":25,"column":6,"nodeType":"150","messageId":"151","endLine":25,"endColumn":15},{"ruleId":"148","severity":1,"message":"158","line":34,"column":9,"nodeType":"150","messageId":"151","endLine":34,"endColumn":53},{"ruleId":"144","replacedBy":"159"},{"ruleId":"146","replacedBy":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"@typescript-eslint/no-unused-vars","'replaceSearchForm' is assigned a value but never used.","Identifier","unusedVar","'resetSearchForm' is assigned a value but never used.",["161"],["162"],["161"],["162"],"'TestProps' is defined but never used.","'markdownRef' is assigned a value but never used.",["161"],["162"],"no-global-assign","no-unsafe-negation"]
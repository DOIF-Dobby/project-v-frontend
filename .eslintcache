[{"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx":"1","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Dev1.tsx":"2","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Dev2.tsx":"3","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\UnAuthorization.tsx":"4","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\RequestError.tsx":"5","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Main.tsx":"6","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAccessToken.ts":"7","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppMenu.tsx":"8","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts":"9","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx":"10","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Entp1.tsx":"11","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\usePage.ts":"12","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppHeader.tsx":"13","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Test.tsx":"14","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useButtons.tsx":"15","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useWindowSize.ts":"16","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useCodes.ts":"17","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\LoadingAndDialog.tsx":"18","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncGet.tsx":"19","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncAction.tsx":"20","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\menu\\ResourceMenu.tsx":"21","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\page\\ResourcePage.tsx":"22"},{"size":409,"mtime":1618828287886,"results":"23","hashOfConfig":"24"},{"size":13783,"mtime":1616504387002,"results":"25","hashOfConfig":"24"},{"size":647,"mtime":1618919928233,"results":"26","hashOfConfig":"24"},{"size":551,"mtime":1618830557712,"results":"27","hashOfConfig":"24"},{"size":395,"mtime":1618830594506,"results":"28","hashOfConfig":"24"},{"size":2471,"mtime":1619690772737,"results":"29","hashOfConfig":"24"},{"size":1636,"mtime":1619690825448,"results":"30","hashOfConfig":"24"},{"size":897,"mtime":1618919920595,"results":"31","hashOfConfig":"24"},{"size":425,"mtime":1610448755299,"results":"32","hashOfConfig":"24"},{"size":613,"mtime":1613988517324,"results":"33","hashOfConfig":"24"},{"size":729,"mtime":1618828287889,"results":"34","hashOfConfig":"24"},{"size":1748,"mtime":1619690839952,"results":"35","hashOfConfig":"24"},{"size":6369,"mtime":1618828287887,"results":"36","hashOfConfig":"24"},{"size":5934,"mtime":1617887078282,"results":"37","hashOfConfig":"24"},{"size":914,"mtime":1619094192525,"results":"38","hashOfConfig":"24"},{"size":1078,"mtime":1614072784953,"results":"39","hashOfConfig":"24"},{"size":473,"mtime":1619528149553,"results":"40","hashOfConfig":"24"},{"size":1092,"mtime":1619690762922,"results":"41","hashOfConfig":"24"},{"size":2279,"mtime":1619701899990,"results":"42","hashOfConfig":"24"},{"size":3464,"mtime":1619702489491,"results":"43","hashOfConfig":"24"},{"size":13866,"mtime":1619704564817,"results":"44","hashOfConfig":"24"},{"size":6802,"mtime":1619696421064,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"sxr7gy",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx",[],["97","98"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Dev1.tsx",["99","100"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Dev2.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\UnAuthorization.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\RequestError.tsx",[],["101","102"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Main.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAccessToken.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppMenu.tsx",[],["103","104"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts",[],["105","106"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx",[],["107","108"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Entp1.tsx",["109"],"import axios from 'axios';\r\nimport { Box, Button, Container, Page } from 'doif-react-kit';\r\nimport React, { useCallback } from 'react';\r\n\r\nfunction Entp1() {\r\n  const onClick = useCallback(() => {\r\n    axios\r\n      .get('/api/projects', {\r\n        headers: {\r\n          pageId: 1,\r\n        },\r\n      })\r\n      .then((res) => console.log(res));\r\n  }, []);\r\n\r\n  return (\r\n    <Container gap=\"0.75rem\">\r\n      <Box>\r\n        <div style={{ textAlign: 'center', height: '830px' }}>ENTP 1</div>\r\n      </Box>\r\n      <Box>\r\n        <div style={{ textAlign: 'center', height: '830px' }}>\r\n          <Button onClick={onClick}>프로젝트 조회</Button>\r\n        </div>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Entp1;\r\n","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\usePage.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppHeader.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Test.tsx",["110","111"],"import {\r\n  Box,\r\n  Button,\r\n  Check,\r\n  Container,\r\n  Datepicker,\r\n  Icon,\r\n  Input,\r\n  MarkdownEditor,\r\n  MarkdownPreview,\r\n  Radio,\r\n  Select,\r\n  Tab,\r\n  Textarea,\r\n} from 'doif-react-kit';\r\nimport marked from 'marked';\r\nimport React, {\r\n  ChangeEvent,\r\n  SyntheticEvent,\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\n\r\ntype TestProps = {};\r\n\r\nfunction Test() {\r\n  const [values, setValues] = useState<Array<string>>([]);\r\n  const [value, setValue] = useState<string>('hi');\r\n  const [selected, setSelected] = useState('TAB_1');\r\n  const [startDate, setStartDate] = useState<Date | null>(new Date());\r\n  const [content, setContent] = useState('');\r\n\r\n  const markdownRef: React.LegacyRef<HTMLDivElement> = useRef(null);\r\n\r\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    const { checked, value: codeValue } = e.target;\r\n\r\n    setValues((value) =>\r\n      checked\r\n        ? value.concat(codeValue)\r\n        : value.filter((val) => val !== codeValue),\r\n    );\r\n  }, []);\r\n\r\n  const onChageRadio = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onChageSelect = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeTab = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSelected(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeMarkdown = useCallback((markdown: string) => {\r\n    setContent(markdown);\r\n  }, []);\r\n\r\n  const onChangeDate = useCallback(\r\n    (\r\n      date: Date | null,\r\n      e: SyntheticEvent<any, Event> | undefined,\r\n      name: string | undefined,\r\n    ) => {\r\n      setStartDate(date);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const data = [\r\n    { code: 'hi', name: '안녕하세요' },\r\n    { code: 'hello', name: '반갑습니다.' },\r\n  ];\r\n\r\n  const tabs = [\r\n    {\r\n      id: 'TAB_1',\r\n      name: '마크다운 에디터',\r\n      disabled: false,\r\n      content: (\r\n        <MarkdownEditor content={content} onChangeMarkdown={onChangeMarkdown} />\r\n      ),\r\n    },\r\n    {\r\n      id: 'TAB_3',\r\n      name: '마크다운 프리뷰',\r\n      disabled: false,\r\n      content: <MarkdownPreview markdown={marked(content)} />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container direction=\"column\" gap=\"0.75rem\">\r\n      <Box height=\"425px\">\r\n        {/* <Loading /> */}\r\n        <Container direction=\"column\">\r\n          <Container style={{ alignItems: 'center' }}>\r\n            <Button>안녕</Button>\r\n            <Button color=\"secondary\">안녕</Button>\r\n            <Button color=\"secondary\" variant=\"outline\">\r\n              안녕\r\n            </Button>\r\n            <Icon icon=\"heart\" />\r\n            <Icon icon=\"heart\" color=\"secondary\" />\r\n            <Icon icon=\"heart\" style={{ fill: '#f00', width: '4rem' }} />\r\n            <Button>\r\n              <Icon icon=\"heart\" />\r\n              버튼\r\n            </Button>\r\n            <Button color=\"secondary\" variant=\"outline\">\r\n              버튼\r\n              <Icon icon=\"heart\" color=\"secondary\" />\r\n            </Button>\r\n            <Button iconOnly>\r\n              <Icon icon=\"heart\" />\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                backgroundColor: '#eaeaea',\r\n                borderRadius: '1.25rem',\r\n                width: '2.5rem',\r\n                height: '2.5rem',\r\n              }}\r\n              iconOnly\r\n            >\r\n              <Icon icon=\"heart\" style={{ fill: '#f00' }} />\r\n            </Button>\r\n            <Input placeholder=\"안녕하세요\" />\r\n            <Input placeholder=\"안녕하세요\" color=\"secondary\" />\r\n            <Input placeholder=\"안녕하세요\" variant=\"underline\" />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              variant=\"underline\"\r\n              color=\"secondary\"\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Input placeholder=\"안녕하세요\" frontIcon={<Icon icon=\"heart\" />} />\r\n            <Input placeholder=\"안녕하세요\" backIcon={<Icon icon=\"heart\" />} />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              frontIcon={<Icon icon=\"check\" />}\r\n              backIcon={<Icon icon=\"calendar\" />}\r\n            />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              variant=\"underline\"\r\n              frontIcon={<Icon icon=\"check\" />}\r\n              backIcon={<Icon icon=\"calendar\" />}\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Check\r\n              data={data}\r\n              values={values}\r\n              name=\"checkbox1\"\r\n              onChange={onChange}\r\n            />\r\n            <Radio\r\n              data={data}\r\n              value={value}\r\n              name=\"radiobox1\"\r\n              onChange={onChageRadio}\r\n            />\r\n            <Select data={data} value={value} onChange={onChageSelect} />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              variant=\"underline\"\r\n            />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              color=\"secondary\"\r\n            />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              color=\"secondary\"\r\n              variant=\"underline\"\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Datepicker selected={startDate} onChange={onChangeDate} />\r\n            <Textarea />\r\n          </Container>\r\n        </Container>\r\n      </Box>\r\n      <Box height=\"425px\">\r\n        <Container>\r\n          <Tab\r\n            tabs={tabs}\r\n            selected={selected}\r\n            name=\"tab-sample\"\r\n            onChange={onChangeTab}\r\n          />\r\n        </Container>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useButtons.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useWindowSize.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useCodes.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\LoadingAndDialog.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncGet.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncAction.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\menu\\ResourceMenu.tsx",["112"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\page\\ResourcePage.tsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":3,"nodeType":"119","messageId":"120","endLine":6,"endColumn":7},{"ruleId":"117","severity":1,"message":"121","line":7,"column":3,"nodeType":"119","messageId":"120","endLine":7,"endColumn":9},{"ruleId":"113","replacedBy":"122"},{"ruleId":"115","replacedBy":"123"},{"ruleId":"113","replacedBy":"124"},{"ruleId":"115","replacedBy":"125"},{"ruleId":"113","replacedBy":"126"},{"ruleId":"115","replacedBy":"127"},{"ruleId":"113","replacedBy":"128"},{"ruleId":"115","replacedBy":"129"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":34,"nodeType":"119","messageId":"120","endLine":2,"endColumn":38},{"ruleId":"117","severity":1,"message":"130","line":25,"column":6,"nodeType":"119","messageId":"120","endLine":25,"endColumn":15},{"ruleId":"117","severity":1,"message":"131","line":34,"column":9,"nodeType":"119","messageId":"120","endLine":34,"endColumn":53},{"ruleId":"117","severity":1,"message":"132","line":133,"column":5,"nodeType":"119","messageId":"120","endLine":133,"endColumn":24},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"@typescript-eslint/no-unused-vars","'Page' is defined but never used.","Identifier","unusedVar","'Scroll' is defined but never used.",["133"],["134"],["133"],["134"],["133"],["134"],["133"],["134"],"'TestProps' is defined but never used.","'markdownRef' is assigned a value but never used.","'replaceCategoryForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
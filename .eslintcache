[{"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Test.tsx":"1","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx":"2","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Entp1.tsx":"3","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx":"4","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Entp2.tsx":"5","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useWindowSize.ts":"6","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppMenu.tsx":"7","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppHeader.tsx":"8"},{"size":5845,"mtime":1613988517325,"results":"9","hashOfConfig":"10"},{"size":613,"mtime":1613988517324,"results":"11","hashOfConfig":"10"},{"size":252,"mtime":1614342440690,"results":"12","hashOfConfig":"10"},{"size":2376,"mtime":1614347670395,"results":"13","hashOfConfig":"10"},{"size":252,"mtime":1614342488294,"results":"14","hashOfConfig":"10"},{"size":1078,"mtime":1614072784953,"results":"15","hashOfConfig":"10"},{"size":1821,"mtime":1614347337940,"results":"16","hashOfConfig":"10"},{"size":6115,"mtime":1614347362135,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"sxr7gy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Test.tsx",["35","36","37","38","39","40"],"import React, {\r\n  ChangeEvent,\r\n  SyntheticEvent,\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  Button,\r\n  theme,\r\n  GlobalStyle,\r\n  Icon,\r\n  Container,\r\n  Input,\r\n  Check,\r\n  Radio,\r\n  Select,\r\n  Tab,\r\n  Page,\r\n  Box,\r\n  Loading,\r\n  Datepicker,\r\n  Textarea,\r\n  MarkdownEditor,\r\n  MarkdownPreview,\r\n  SideMenu,\r\n} from 'doif-react-kit';\r\nimport marked from 'marked';\r\n\r\ntype TestProps = {};\r\n\r\nfunction Test() {\r\n  const [values, setValues] = useState<Array<string>>([]);\r\n  const [value, setValue] = useState<string>('hi');\r\n  const [selected, setSelected] = useState('TAB_1');\r\n  const [startDate, setStartDate] = useState<Date | null>(new Date());\r\n  const [content, setContent] = useState('');\r\n\r\n  const markdownRef: React.LegacyRef<HTMLDivElement> = useRef(null);\r\n\r\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    const { checked, value: codeValue } = e.target;\r\n\r\n    setValues((value) =>\r\n      checked\r\n        ? value.concat(codeValue)\r\n        : value.filter((val) => val !== codeValue)\r\n    );\r\n  }, []);\r\n\r\n  const onChageRadio = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onChageSelect = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeTab = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSelected(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeMarkdown = useCallback((markdown: string) => {\r\n    setContent(markdown);\r\n  }, []);\r\n\r\n  const onChangeDate = useCallback(\r\n    (\r\n      date: Date | null,\r\n      e: SyntheticEvent<any, Event> | undefined,\r\n      name: string | undefined\r\n    ) => {\r\n      setStartDate(date);\r\n    },\r\n    []\r\n  );\r\n\r\n  const data = [\r\n    { code: 'hi', name: '안녕하세요' },\r\n    { code: 'hello', name: '반갑습니다.' },\r\n  ];\r\n\r\n  const tabs = [\r\n    {\r\n      id: 'TAB_1',\r\n      name: '마크다운 에디터',\r\n      disabled: false,\r\n      content: (\r\n        <MarkdownEditor content={content} onChangeMarkdown={onChangeMarkdown} />\r\n      ),\r\n    },\r\n    {\r\n      id: 'TAB_3',\r\n      name: '마크다운 프리뷰',\r\n      disabled: false,\r\n      content: <MarkdownPreview markdown={marked(content)} />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page>\r\n      <Box>\r\n        {/* <Loading/> */}\r\n        <Container direction=\"column\">\r\n          <Container style={{ alignItems: 'center' }}>\r\n            <Button>안녕</Button>\r\n            <Button color=\"secondary\">안녕</Button>\r\n            <Button color=\"secondary\" variant=\"outline\">\r\n              안녕\r\n            </Button>\r\n            <Icon icon=\"heart\" />\r\n            <Icon icon=\"heart\" color=\"secondary\" />\r\n            <Icon icon=\"heart\" style={{ fill: '#f00', width: '4rem' }} />\r\n            <Button>\r\n              <Icon icon=\"heart\" />\r\n              버튼\r\n            </Button>\r\n            <Button color=\"secondary\" variant=\"outline\">\r\n              버튼\r\n              <Icon icon=\"heart\" color=\"secondary\" />\r\n            </Button>\r\n            <Button iconOnly>\r\n              <Icon icon=\"heart\" />\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                backgroundColor: '#eaeaea',\r\n                borderRadius: '1.25rem',\r\n                width: '2.5rem',\r\n                height: '2.5rem',\r\n              }}\r\n              iconOnly>\r\n              <Icon icon=\"heart\" style={{ fill: '#f00' }} />\r\n            </Button>\r\n            <Input placeholder=\"안녕하세요\" />\r\n            <Input placeholder=\"안녕하세요\" color=\"secondary\" />\r\n            <Input placeholder=\"안녕하세요\" variant=\"underline\" />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              variant=\"underline\"\r\n              color=\"secondary\"\r\n            />\r\n            <Input placeholder=\"안녕하세요\" frontIcon={<Icon icon=\"heart\" />} />\r\n            <Input placeholder=\"안녕하세요\" backIcon={<Icon icon=\"heart\" />} />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              frontIcon={<Icon icon=\"check\" />}\r\n              backIcon={<Icon icon=\"calendar\" />}\r\n            />\r\n            <Input\r\n              placeholder=\"안녕하세요\"\r\n              variant=\"underline\"\r\n              frontIcon={<Icon icon=\"check\" />}\r\n              backIcon={<Icon icon=\"calendar\" />}\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Check\r\n              data={data}\r\n              values={values}\r\n              name=\"checkbox1\"\r\n              onChange={onChange}\r\n            />\r\n            <Radio\r\n              data={data}\r\n              value={value}\r\n              name=\"radiobox1\"\r\n              onChange={onChageRadio}\r\n            />\r\n            <Select data={data} value={value} onChange={onChageSelect} />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              variant=\"underline\"\r\n            />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              color=\"secondary\"\r\n            />\r\n            <Select\r\n              data={data}\r\n              value={value}\r\n              onChange={onChageSelect}\r\n              color=\"secondary\"\r\n              variant=\"underline\"\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Tab\r\n              tabs={tabs}\r\n              selected={selected}\r\n              name=\"tab-sample\"\r\n              onChange={onChangeTab}\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Datepicker selected={startDate} onChange={onChangeDate} />\r\n            <Textarea />\r\n          </Container>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Entp1.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Entp2.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useWindowSize.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppMenu.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppHeader.tsx",[],{"ruleId":"41","severity":1,"message":"42","line":10,"column":3,"nodeType":"43","messageId":"44","endLine":10,"endColumn":8},{"ruleId":"41","severity":1,"message":"45","line":11,"column":3,"nodeType":"43","messageId":"44","endLine":11,"endColumn":14},{"ruleId":"41","severity":1,"message":"46","line":21,"column":3,"nodeType":"43","messageId":"44","endLine":21,"endColumn":10},{"ruleId":"41","severity":1,"message":"47","line":26,"column":3,"nodeType":"43","messageId":"44","endLine":26,"endColumn":11},{"ruleId":"41","severity":1,"message":"48","line":30,"column":6,"nodeType":"43","messageId":"44","endLine":30,"endColumn":15},{"ruleId":"41","severity":1,"message":"49","line":39,"column":9,"nodeType":"43","messageId":"44","endLine":39,"endColumn":53},"@typescript-eslint/no-unused-vars","'theme' is defined but never used.","Identifier","unusedVar","'GlobalStyle' is defined but never used.","'Loading' is defined but never used.","'SideMenu' is defined but never used.","'TestProps' is defined but never used.","'markdownRef' is assigned a value but never used."]
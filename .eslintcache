[{"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts":"1","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\LoadingAndDialog.tsx":"2","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppHeader.tsx":"3","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx":"4","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\menu\\ResourceMenu.tsx":"5","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\common\\commonValue.ts":"6","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncAction.tsx":"7","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\UnAuthorization.tsx":"8","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Test.tsx":"9","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\usePage.ts":"10","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppMenu.tsx":"11","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx":"12","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\button\\ResourceButton.tsx":"13","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\label\\ResourceLabel.tsx":"14","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\page\\ResourcePage.tsx":"15","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAccessToken.ts":"16","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useCodes.ts":"17","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\common\\mergeValid.ts":"18","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useButtons.tsx":"19","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useLabels.tsx":"20","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\message\\ResourceMessage.tsx":"21","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Main.tsx":"22","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncGetAction.tsx":"23","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useWindowSize.ts":"24","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\tab\\ResourceTab.tsx":"25"},{"size":425,"mtime":1610448755299,"results":"26","hashOfConfig":"27"},{"size":1092,"mtime":1619690762922,"results":"28","hashOfConfig":"27"},{"size":6369,"mtime":1618828287887,"results":"29","hashOfConfig":"27"},{"size":409,"mtime":1618828287886,"results":"30","hashOfConfig":"27"},{"size":20238,"mtime":1622541636461,"results":"31","hashOfConfig":"27"},{"size":73,"mtime":1620297128310,"results":"32","hashOfConfig":"27"},{"size":4242,"mtime":1621862291381,"results":"33","hashOfConfig":"27"},{"size":551,"mtime":1618830557712,"results":"34","hashOfConfig":"27"},{"size":5934,"mtime":1617887078282,"results":"35","hashOfConfig":"27"},{"size":1838,"mtime":1620297128312,"results":"36","hashOfConfig":"27"},{"size":897,"mtime":1618919920595,"results":"37","hashOfConfig":"27"},{"size":613,"mtime":1613988517324,"results":"38","hashOfConfig":"27"},{"size":13327,"mtime":1622541636459,"results":"39","hashOfConfig":"27"},{"size":11030,"mtime":1622541636460,"results":"40","hashOfConfig":"27"},{"size":9207,"mtime":1622541636461,"results":"41","hashOfConfig":"27"},{"size":1636,"mtime":1619690825448,"results":"42","hashOfConfig":"27"},{"size":473,"mtime":1619528149553,"results":"43","hashOfConfig":"27"},{"size":350,"mtime":1621864074548,"results":"44","hashOfConfig":"27"},{"size":914,"mtime":1619094192525,"results":"45","hashOfConfig":"27"},{"size":510,"mtime":1622205618748,"results":"46","hashOfConfig":"27"},{"size":9767,"mtime":1623068193191,"results":"47","hashOfConfig":"27"},{"size":2889,"mtime":1623067261477,"results":"48","hashOfConfig":"27"},{"size":2793,"mtime":1620912130060,"results":"49","hashOfConfig":"27"},{"size":1078,"mtime":1614072784953,"results":"50","hashOfConfig":"27"},{"size":12373,"mtime":1623156755883,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"sxr7gy",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts",[],["106","107"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\LoadingAndDialog.tsx",[],["108","109"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppHeader.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\menu\\ResourceMenu.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\common\\commonValue.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncAction.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\errors\\UnAuthorization.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Test.tsx",["110","111"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\usePage.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\components\\AppMenu.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\button\\ResourceButton.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\label\\ResourceLabel.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\page\\ResourcePage.tsx",["112"],"import {\r\n  CloseButton,\r\n  DeleteDialog,\r\n  Form,\r\n  InFormContainer,\r\n  LabelInput,\r\n  LabelSelect,\r\n  Loading,\r\n  Modal,\r\n  PageHeader,\r\n  Row,\r\n  SaveButton,\r\n  Table,\r\n  TableModelProps,\r\n  useChange,\r\n} from 'doif-react-kit';\r\nimport React, { FormEvent, useCallback, useMemo, useState } from 'react';\r\nimport { defaultValue } from '../../../common/commonValue';\r\nimport mergeValid from '../../../common/mergeValid';\r\nimport useAsyncAction, {\r\n  deleteAction,\r\n  postAction,\r\n  putAction,\r\n} from '../../../hooks/useAsyncAction';\r\nimport useAsyncGetAction, { getAction } from '../../../hooks/useAsyncGetAction';\r\nimport useButtons, { ButtonInfoProps } from '../../../hooks/useButtons';\r\nimport useCodes from '../../../hooks/useCodes';\r\nimport useLabels from '../../../hooks/useLabels';\r\nimport usePage from '../../../hooks/usePage';\r\nimport useTableModel from '../../../hooks/useTableModel';\r\n\r\n// table row data\r\nlet row: any = {};\r\n// button 클릭시 등록/수정 타입\r\nlet buttonType: string = '';\r\n\r\n/**\r\n * 페이지 자원 관리 페이지\r\n * @returns ResourcePage\r\n */\r\nfunction ResourcePage() {\r\n  /******************************************************************\r\n   * 기본 데이터 및 state\r\n   *******************************************************************/\r\n  // 페이지 데이터 조회\r\n  const [pageData] = usePage('/api/pages/resources/page');\r\n  // 코드 조회\r\n  const [enableCodes]: any = useCodes('ENABLE_STATUS', pageData);\r\n\r\n  // 초기 페이지 상태\r\n  const initPageState = {\r\n    openModal: false,\r\n    disableButton: true,\r\n    openDeleteDialog: false,\r\n    disableItem: false,\r\n  };\r\n\r\n  // 페이지 상태\r\n  const [pageState, setPageState] = useState(initPageState);\r\n\r\n  // form 데이터\r\n  const [form, onChangeForm, replaceForm, resetForm] = useChange({\r\n    code: '',\r\n    name: '',\r\n    description: '',\r\n    url: '',\r\n    status: 'ENABLE',\r\n  });\r\n\r\n  const { code, name, description, url, status } = form;\r\n\r\n  // 라벨들\r\n  const {\r\n    LABEL_RESOURCE_PAGE_CODE,\r\n    LABEL_RESOURCE_PAGE_NAME,\r\n    LABEL_RESOURCE_PAGE_DESCRIPTION,\r\n    LABEL_RESOURCE_PAGE_STATUS,\r\n    LABEL_RESOURCE_PAGE_URL,\r\n    LABEL_RESOURCE_PAGE_LIST,\r\n    LABEL_RESOURCE_PAGE_CAPTION,\r\n  } = useLabels(pageData);\r\n\r\n  // 테이블 model\r\n  const model: TableModelProps[] = useTableModel(\r\n    [\r\n      {\r\n        label: 'LABEL_RESOURCE_PAGE_CODE',\r\n        name: 'code',\r\n        width: 250,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: 'LABEL_RESOURCE_PAGE_NAME',\r\n        name: 'name',\r\n        width: 250,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: 'LABEL_RESOURCE_PAGE_DESCRIPTION',\r\n        name: 'description',\r\n        width: 450,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: 'LABEL_RESOURCE_PAGE_STATUS',\r\n        name: 'statusName',\r\n        width: 120,\r\n        formatter: (cellValue: any) => {\r\n          return cellValue.props.value === '가능' ? (\r\n            <span style={{ color: '#02c902' }}>{cellValue}</span>\r\n          ) : (\r\n            <span style={{ color: '#fc3d3d' }}>{cellValue}</span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        label: 'LABEL_RESOURCE_PAGE_URL',\r\n        name: 'url',\r\n        width: 350,\r\n        align: 'left',\r\n      },\r\n      {\r\n        label: '',\r\n        name: 'resourceId',\r\n        hidden: true,\r\n      },\r\n    ],\r\n    pageData,\r\n  );\r\n\r\n  /******************************************************************\r\n   * Action 함수들\r\n   ******************************************************************/\r\n\r\n  // 페이지 등록/수정/삭제 시 성공 콜백\r\n  const asyncSucCallback = () => {\r\n    setPageState((state) => ({\r\n      ...state,\r\n      openModal: false,\r\n      openDeleteDialog: false,\r\n    }));\r\n    getPages();\r\n  };\r\n\r\n  // 페이지 데이터 조회\r\n  const [pages, getPages]: any = useAsyncGetAction(\r\n    () => pageData && getAction('/api/resources/pages'),\r\n    [pageData],\r\n    {\r\n      skip: false,\r\n      onSuccess: () => {\r\n        setPageState(initPageState);\r\n      },\r\n    },\r\n  );\r\n\r\n  // 페이지 등록\r\n  const [postPage, postPageValid] = useAsyncAction(\r\n    () => postAction('/api/resources/pages', form),\r\n    {\r\n      onSuccess: asyncSucCallback,\r\n    },\r\n  );\r\n\r\n  // 페이지 수정\r\n  const [putPage, putPageValid] = useAsyncAction(\r\n    () => putAction('/api/resources/pages/' + row.resourceId, form),\r\n    {\r\n      onSuccess: asyncSucCallback,\r\n    },\r\n  );\r\n\r\n  // 페이지 삭제\r\n  const [deletePage] = useAsyncAction(\r\n    () => deleteAction('/api/resources/pages/' + row.resourceId),\r\n    {\r\n      onSuccess: asyncSucCallback,\r\n    },\r\n  );\r\n\r\n  /******************************************************************\r\n   * 클라이언트 함수들\r\n   ******************************************************************/\r\n  // 테이블 버튼들\r\n  const buttonInfos: ButtonInfoProps[] = [\r\n    {\r\n      id: 'BTN_RESOURCE_PAGE_ADD',\r\n      onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setPageState((state) => ({\r\n          ...state,\r\n          disableItem: false,\r\n          openModal: true,\r\n        }));\r\n        buttonType = 'post';\r\n\r\n        resetForm();\r\n      },\r\n    },\r\n    {\r\n      id: 'BTN_RESOURCE_PAGE_MODIFY',\r\n      disable: pageState.disableButton,\r\n      onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setPageState((state) => ({\r\n          ...state,\r\n          disableItem: true,\r\n          openModal: true,\r\n        }));\r\n        buttonType = 'put';\r\n\r\n        replaceForm({\r\n          name: row.name,\r\n          description: row.description,\r\n          status: row.status,\r\n          code: row.code,\r\n          url: row.url,\r\n        });\r\n      },\r\n    },\r\n    {\r\n      id: 'BTN_RESOURCE_PAGE_DELETE',\r\n      disable: pageState.disableButton,\r\n      onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setPageState((state) => ({ ...state, openDeleteDialog: true }));\r\n      },\r\n    },\r\n  ];\r\n  const buttons = useButtons(pageData && pageData.buttonMap, buttonInfos);\r\n\r\n  // 테이블 select 시 콜백\r\n  const onSelectRow = useCallback((id: string, rowValue: any) => {\r\n    row = rowValue;\r\n    setPageState((state) => ({\r\n      ...state,\r\n      disableButton: false,\r\n    }));\r\n  }, []);\r\n\r\n  // 페이지 저장\r\n  const onSavePage = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (buttonType === 'post') {\r\n      postPage();\r\n    } else if (buttonType === 'put') {\r\n      putPage();\r\n    }\r\n  };\r\n\r\n  // Validation\r\n  const pageValid = mergeValid([postPageValid, putPageValid]);\r\n\r\n  // 페이지 데이터 로딩 전엔 Loading 표시\r\n  if (!pageData) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DeleteDialog\r\n        visible={pageState.openDeleteDialog}\r\n        onConfirm={deletePage}\r\n        onCancel={() =>\r\n          setPageState((state) => ({ ...state, openDeleteDialog: false }))\r\n        }\r\n      />\r\n\r\n      <PageHeader menuName={pageData.menuName} menuList={pageData.menuList} />\r\n      <Table\r\n        caption={LABEL_RESOURCE_PAGE_LIST}\r\n        model={model}\r\n        buttons={buttons}\r\n        data={pages ? pages.content : []}\r\n        onSelectRow={onSelectRow}\r\n      />\r\n\r\n      <Modal visible={pageState.openModal} title={LABEL_RESOURCE_PAGE_CAPTION}>\r\n        <Form onSubmit={onSavePage}>\r\n          <Row>\r\n            <LabelInput\r\n              required\r\n              label={LABEL_RESOURCE_PAGE_CODE}\r\n              value={code}\r\n              onChange={onChangeForm}\r\n              name=\"code\"\r\n              disabled={pageState.disableItem}\r\n              validation={pageValid.code}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <LabelInput\r\n              required\r\n              label={LABEL_RESOURCE_PAGE_NAME}\r\n              value={name}\r\n              onChange={onChangeForm}\r\n              name=\"name\"\r\n              validation={pageValid.name}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <LabelInput\r\n              label={LABEL_RESOURCE_PAGE_DESCRIPTION}\r\n              value={description}\r\n              onChange={onChangeForm}\r\n              name=\"description\"\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <LabelInput\r\n              required\r\n              label={LABEL_RESOURCE_PAGE_URL}\r\n              value={url}\r\n              onChange={onChangeForm}\r\n              name=\"url\"\r\n              validation={pageValid.url}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <LabelSelect\r\n              required\r\n              label={LABEL_RESOURCE_PAGE_STATUS}\r\n              data={enableCodes}\r\n              defaultValue={defaultValue}\r\n              value={status}\r\n              onChange={onChangeForm}\r\n              name=\"status\"\r\n              validation={pageValid.status}\r\n            />\r\n          </Row>\r\n          <InFormContainer>\r\n            <SaveButton />\r\n            <CloseButton\r\n              onClick={() =>\r\n                setPageState((state) => ({ ...state, openModal: false }))\r\n              }\r\n            />\r\n          </InFormContainer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResourcePage;\r\n",["113","114"],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAccessToken.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useCodes.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\common\\mergeValid.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useButtons.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useLabels.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\message\\ResourceMessage.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\Main.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useAsyncGetAction.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\hooks\\useWindowSize.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\pages\\developer\\tab\\ResourceTab.tsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":25,"column":6,"nodeType":"123","messageId":"124","endLine":25,"endColumn":15},{"ruleId":"121","severity":1,"message":"125","line":34,"column":9,"nodeType":"123","messageId":"124","endLine":34,"endColumn":53},{"ruleId":"121","severity":1,"message":"126","line":17,"column":41,"nodeType":"123","messageId":"124","endLine":17,"endColumn":48},{"ruleId":"115","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],"@typescript-eslint/no-unused-vars","'TestProps' is defined but never used.","Identifier","unusedVar","'markdownRef' is assigned a value but never used.","'useMemo' is defined but never used.",["129"],["130"],"no-global-assign","no-unsafe-negation"]
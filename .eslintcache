[{"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx":"1","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx":"3"},{"size":5530,"mtime":1612445739017,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1610448755299,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1610448755299,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"sxr7gy",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx",["15"],"import React, { ChangeEvent, SyntheticEvent, useCallback, useState } from 'react';\nimport './App.css';\nimport {\n  Button,\n  theme,\n  GlobalStyle,\n  Icon,\n  Container,\n  Input,\n  Check,\n  Radio,\n  Select,\n  Tab,\n  Page,\n  Box,\n  Loading,\n  Datepicker\n} from 'doif-react-kit';\nimport { ThemeProvider } from 'styled-components';\nimport 'doif-react-kit/dist/datepicker.css';\n\nfunction App() {\n  const [themeName, setThemeName] = useState('light');\n  const [values, setValues] = useState<Array<string>>([]);\n  const [value, setValue] = useState<string>('hi');\n  const [selected, setSelected] = useState('TAB_1');\n  const [startDate, setStartDate] = useState<Date | null>(new Date());\n\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const { checked, value: codeValue } = e.target;\n\n    setValues((value) =>\n      checked\n        ? value.concat(codeValue)\n        : value.filter((val) => val !== codeValue)\n    );\n  }, []);\n\n  const onChageRadio = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onChageSelect = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onChangeTab = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSelected(e.target.value);\n  }, []);\n\n  const onChangeDate = useCallback(\n    (date: Date | null, e: SyntheticEvent<any, Event> | undefined, name: string | undefined) => {\n      setStartDate(date);\n    },\n    [],\n  );\n\n  const data = [\n    { code: 'hi', name: '안녕하세요' },\n    { code: 'hello', name: '반갑습니다.' },\n  ];\n\n  const tabs = [\n    {\n      id: 'TAB_1',\n      name: '가맹점정보',\n      disabled: false,\n      content: <div>탭 1입니다.</div>,\n    },\n    {\n      id: 'TAB_3',\n      name: '담당자정보',\n      disabled: false,\n      content: (\n        <Container>\n          <Input />\n          <Button>안녕하세요</Button>\n          <Button variant=\"outline\">안녕하세요</Button>\n        </Container>\n      ),\n    },\n  ];\n\n  return (\n    <ThemeProvider theme={theme[themeName]}>\n      <GlobalStyle />\n      <Page>\n        <Box>\n          {/* <Loading/> */}\n          <Container direction=\"column\">\n            <Container style={{ alignItems: 'center' }}>\n              <Button>안녕</Button>\n              <Button color=\"secondary\">안녕</Button>\n              <Button color=\"secondary\" variant=\"outline\">\n                안녕\n              </Button>\n              <Icon icon=\"heart\" />\n              <Icon icon=\"heart\" color=\"secondary\" />\n              <Icon icon=\"heart\" style={{ fill: '#f00', width: '4rem' }} />\n              <Button>\n                <Icon icon=\"heart\" />\n                버튼\n              </Button>\n              <Button color=\"secondary\" variant=\"outline\">\n                버튼\n                <Icon icon=\"heart\" color=\"secondary\" />\n              </Button>\n              <Button iconOnly>\n                <Icon icon=\"heart\" />\n              </Button>\n              <Button\n                style={{\n                  backgroundColor: '#eaeaea',\n                  borderRadius: '1.25rem',\n                  width: '2.5rem',\n                  height: '2.5rem',\n                }}\n                iconOnly>\n                <Icon icon=\"heart\" style={{ fill: '#f00' }} />\n              </Button>\n              <Input placeholder=\"안녕하세요\" />\n              <Input placeholder=\"안녕하세요\" color=\"secondary\" />\n              <Input placeholder=\"안녕하세요\" variant=\"underline\" />\n              <Input placeholder=\"안녕하세요\" variant=\"underline\" color=\"secondary\" />\n              <Input placeholder=\"안녕하세요\" frontIcon={<Icon icon=\"heart\" />} />\n              <Input placeholder=\"안녕하세요\" backIcon={<Icon icon=\"heart\" />} />\n              <Input\n                placeholder=\"안녕하세요\"\n                frontIcon={<Icon icon=\"check\" />}\n                backIcon={<Icon icon=\"calendar\" />}\n              />\n              <Input\n                placeholder=\"안녕하세요\"\n                variant=\"underline\"\n                frontIcon={<Icon icon=\"check\" />}\n                backIcon={<Icon icon=\"calendar\" />}\n              />\n              <button\n                onClick={() =>\n                  setThemeName(themeName === 'light' ? 'dark' : 'light')\n                }>\n                토글\n              </button>\n            </Container>\n            <Container>\n              <Check\n                data={data}\n                values={values}\n                name=\"checkbox1\"\n                onChange={onChange}\n              />\n              <Radio data={data} value={value} name=\"radiobox1\" onChange={onChageRadio}/>\n              <Select data={data} value={value} onChange={onChageSelect}/>\n              <Select data={data} value={value} onChange={onChageSelect} variant=\"underline\"/>\n              <Select data={data} value={value} onChange={onChageSelect} color=\"secondary\" />\n              <Select data={data} value={value} onChange={onChageSelect} color=\"secondary\" variant=\"underline\"/>\n            </Container>\n            <Container>\n              <Tab\n              tabs={tabs}\n              selected={selected}\n              name=\"tab-sample\"\n              onChange={onChangeTab} />\n            </Container>\n            <Container>\n              <Datepicker selected={startDate} onChange={onChangeDate} />\n            </Container>\n          </Container>\n        </Box>\n      </Page>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx",[],{"ruleId":"16","severity":1,"message":"17","line":16,"column":3,"nodeType":"18","messageId":"19","endLine":16,"endColumn":10},"@typescript-eslint/no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar"]
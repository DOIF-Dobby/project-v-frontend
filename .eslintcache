[{"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx":"1","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx":"2","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts":"3"},{"size":500,"mtime":1610448755299,"results":"4","hashOfConfig":"5"},{"size":6594,"mtime":1613568361083,"results":"6","hashOfConfig":"5"},{"size":425,"mtime":1610448755299,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sxr7gy",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\index.tsx",[],"C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\App.tsx",["15","16"],"import React, {\r\n  ChangeEvent,\r\n  SyntheticEvent,\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport './App.css';\r\nimport {\r\n  Button,\r\n  theme,\r\n  GlobalStyle,\r\n  Icon,\r\n  Container,\r\n  Input,\r\n  Check,\r\n  Radio,\r\n  Select,\r\n  Tab,\r\n  Page,\r\n  Box,\r\n  Loading,\r\n  Datepicker,\r\n  Textarea,\r\n  MarkdownEditor,\r\n  MarkdownPreview\r\n} from 'doif-react-kit';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport marked from \"marked\";\r\nimport 'doif-react-kit/dist/datepicker.css';\r\n\r\nfunction App() {\r\n  const [themeName, setThemeName] = useState('light');\r\n  const [values, setValues] = useState<Array<string>>([]);\r\n  const [value, setValue] = useState<string>('hi');\r\n  const [selected, setSelected] = useState('TAB_1');\r\n  const [startDate, setStartDate] = useState<Date | null>(new Date());\r\n  const [content, setContent] = useState('');\r\n\r\n  const markdownRef: React.LegacyRef<HTMLDivElement> = useRef(null)\r\n\r\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    const { checked, value: codeValue } = e.target;\r\n\r\n    setValues((value) =>\r\n      checked\r\n        ? value.concat(codeValue)\r\n        : value.filter((val) => val !== codeValue)\r\n    );\r\n  }, []);\r\n\r\n  const onChageRadio = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onChageSelect = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeTab = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSelected(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeMarkdown = useCallback((markdown: string) => {\r\n    setContent(markdown);\r\n  }, []);\r\n\r\n\r\n  const onChangeDate = useCallback(\r\n    (\r\n      date: Date | null,\r\n      e: SyntheticEvent<any, Event> | undefined,\r\n      name: string | undefined\r\n    ) => {\r\n      setStartDate(date);\r\n    },\r\n    []\r\n  );\r\n\r\n  const data = [\r\n    { code: 'hi', name: '안녕하세요' },\r\n    { code: 'hello', name: '반갑습니다.' },\r\n  ];\r\n\r\n  const tabs = [\r\n    {\r\n      id: 'TAB_1',\r\n      name: '마크다운 에디터',\r\n      disabled: false,\r\n      content: <MarkdownEditor content={content} onChangeMarkdown={onChangeMarkdown} />,\r\n    },\r\n    {\r\n      id: 'TAB_3',\r\n      name: '마크다운 프리뷰',\r\n      disabled: false,\r\n      content: (\r\n          <MarkdownPreview markdown={marked(content)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ThemeProvider theme={theme[themeName]}>\r\n      <GlobalStyle />\r\n      <Page>\r\n        <Box>\r\n          {/* <Loading/> */}\r\n          <Container direction=\"column\">\r\n            <Container style={{ alignItems: 'center' }}>\r\n              <Button>안녕</Button>\r\n              <Button color=\"secondary\">안녕</Button>\r\n              <Button color=\"secondary\" variant=\"outline\">\r\n                안녕\r\n              </Button>\r\n              <Icon icon=\"heart\" />\r\n              <Icon icon=\"heart\" color=\"secondary\" />\r\n              <Icon icon=\"heart\" style={{ fill: '#f00', width: '4rem' }} />\r\n              <Button>\r\n                <Icon icon=\"heart\" />\r\n                버튼\r\n              </Button>\r\n              <Button color=\"secondary\" variant=\"outline\">\r\n                버튼\r\n                <Icon icon=\"heart\" color=\"secondary\" />\r\n              </Button>\r\n              <Button iconOnly>\r\n                <Icon icon=\"heart\" />\r\n              </Button>\r\n              <Button\r\n                style={{\r\n                  backgroundColor: '#eaeaea',\r\n                  borderRadius: '1.25rem',\r\n                  width: '2.5rem',\r\n                  height: '2.5rem',\r\n                }}\r\n                iconOnly>\r\n                <Icon icon=\"heart\" style={{ fill: '#f00' }} />\r\n              </Button>\r\n              <Input placeholder=\"안녕하세요\" />\r\n              <Input placeholder=\"안녕하세요\" color=\"secondary\" />\r\n              <Input placeholder=\"안녕하세요\" variant=\"underline\" />\r\n              <Input\r\n                placeholder=\"안녕하세요\"\r\n                variant=\"underline\"\r\n                color=\"secondary\"\r\n              />\r\n              <Input\r\n                placeholder=\"안녕하세요\"\r\n                frontIcon={<Icon icon=\"heart\" />}\r\n              />\r\n              <Input\r\n                placeholder=\"안녕하세요\"\r\n                backIcon={<Icon icon=\"heart\" />}\r\n              />\r\n              <Input\r\n                placeholder=\"안녕하세요\"\r\n                frontIcon={<Icon icon=\"check\" />}\r\n                backIcon={<Icon icon=\"calendar\" />}\r\n              />\r\n              <Input\r\n                placeholder=\"안녕하세요\"\r\n                variant=\"underline\"\r\n                frontIcon={<Icon icon=\"check\" />}\r\n                backIcon={<Icon icon=\"calendar\" />}\r\n              />\r\n              <button\r\n                onClick={() =>\r\n                  setThemeName(themeName === 'light' ? 'dark' : 'light')\r\n                }>\r\n                토글\r\n              </button>\r\n            </Container>\r\n            <Container>\r\n              <Check\r\n                data={data}\r\n                values={values}\r\n                name=\"checkbox1\"\r\n                onChange={onChange}\r\n              />\r\n              <Radio\r\n                data={data}\r\n                value={value}\r\n                name=\"radiobox1\"\r\n                onChange={onChageRadio}\r\n              />\r\n              <Select data={data} value={value} onChange={onChageSelect} />\r\n              <Select\r\n                data={data}\r\n                value={value}\r\n                onChange={onChageSelect}\r\n                variant=\"underline\"\r\n              />\r\n              <Select\r\n                data={data}\r\n                value={value}\r\n                onChange={onChageSelect}\r\n                color=\"secondary\"\r\n              />\r\n              <Select\r\n                data={data}\r\n                value={value}\r\n                onChange={onChageSelect}\r\n                color=\"secondary\"\r\n                variant=\"underline\"\r\n              />\r\n            </Container>\r\n            <Container>\r\n              <Tab\r\n                tabs={tabs}\r\n                selected={selected}\r\n                name=\"tab-sample\"\r\n                onChange={onChangeTab}\r\n              />\r\n            </Container>\r\n            <Container>\r\n              <Datepicker selected={startDate} onChange={onChangeDate} />\r\n              <Textarea />\r\n            </Container>\r\n            \r\n          </Container>\r\n        </Box>\r\n      </Page>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\MJ\\dev\\my-project\\react-project\\doif-projectv-frontend\\src\\reportWebVitals.ts",[],{"ruleId":"17","severity":1,"message":"18","line":22,"column":3,"nodeType":"19","messageId":"20","endLine":22,"endColumn":10},{"ruleId":"17","severity":1,"message":"21","line":40,"column":9,"nodeType":"19","messageId":"20","endLine":40,"endColumn":53},"@typescript-eslint/no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'markdownRef' is assigned a value but never used."]